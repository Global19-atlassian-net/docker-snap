name: docker
version: 1.11.2-1
summary: Docker Linux container runtime
description: Docker complements kernel namespacing with a high-level API which operates at the process level. It runs unix processes with strong guarantees of isolation and repeatability across servers.

confinement: devmode
# TODO figure out proper confinement

apps:
  docker:
    command: docker-wrapper
    # TODO permissions

  dockerd:
    command: dockerd-wrapper
    daemon: simple
    # TODO permissions

parts:
  snappy-bins:
    plugin: shell
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      install -d "$DESTDIR/bin"
      install -t "$DESTDIR/bin" "$SNAPDIR"/bin/*
    stage-packages:
      #- adduser
      - mount

  docker:
    plugin: shell
    source: https://github.com/docker/docker/archive/v1.11.2.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-eux', '-o', 'pipefail']
    shell-command: |
      for patch in "$SNAPDIR"/patches/*.patch; do
        patch -p1 -i "$patch"
      done
      
      # aww, can't use "git ls-remote" on launchpad:
      #  fatal: unable to access 'https://github.com/docker/docker.git/': Could not resolve host: github.com
      #export DOCKER_GITCOMMIT="$(
      #  git ls-remote --tags \
      #    https://github.com/docker/docker.git \
      #    "refs/tags/v$(cat VERSION)^{}" \
      #  | cut -b1-7
      #)"
      if git rev-parse &> /dev/null; then
        export DOCKER_GITCOMMIT="snap-$(git rev-parse --short HEAD)"
      else
        export DOCKER_GITCOMMIT="v$(cat VERSION)-snap"
      fi
      export BUILDTIME="$(
        date --rfc-3339 ns 2>/dev/null | sed -e 's/ /T/' \
          || date -u
      )"
      
      export DOCKER_BUILDTAGS='apparmor pkcs11 seccomp selinux'
      
      export AUTO_GOPATH=1
      ./hack/make.sh dynbinary
      
      ls -l bundles/latest/*/
      
      dockerBin='bundles/latest/dynbinary/docker'
      "$dockerBin" -v
      "$dockerBin" -v | grep -q "$DOCKER_GITCOMMIT"
      
      install -d "$DESTDIR/bin"
      install -T "$(readlink -f "$dockerBin")" "$DESTDIR/bin/docker"
    build-packages:
      - btrfs-tools
      - gcc
      - golang-go
      - libc6-dev
      - libdevmapper-dev
      - libltdl-dev

  containerd:
    plugin: shell
    #source: https://github.com/docker/containerd/archive/v0.2.2.tar.gz
    source: https://github.com/docker/containerd/archive/9dc2b3273db42c75368988a3885a3afd770069d9.tar.gz
    # https://github.com/docker/docker/blob/v1.11.2/Dockerfile#L254
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      mkdir -p .gopath/src/github.com/docker
      ln -sfT "$PWD" .gopath/src/github.com/docker/containerd
      export GOPATH="$PWD/.gopath"
      
      make GIT_COMMIT= GIT_BRANCH= LDFLAGS=
      
      install -d "$DESTDIR/bin"
      install -T bin/containerd "$DESTDIR/bin/docker-containerd"
      install -T bin/containerd-shim "$DESTDIR/bin/docker-containerd-shim"
      install -T bin/ctr "$DESTDIR/bin/docker-containerd-ctr"
    build-packages:
      - golang-go
      - make

  runc:
    plugin: shell
    source: https://github.com/opencontainers/runc/archive/v0.1.1.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      mkdir -p .gopath/src/github.com/opencontainers
      ln -sfT "$PWD" .gopath/src/github.com/opencontainers/runc
      export GOPATH="$PWD/.gopath"
      
      make BUILDTAGS='seccomp apparmor selinux' COMMIT=
      
      install -d "$DESTDIR/bin"
      install -T runc "$DESTDIR/bin/docker-runc"
    build-packages:
      - golang-go
      - libapparmor-dev
      - libseccomp-dev
      - make

# vim:set et ts=2 sw=2:

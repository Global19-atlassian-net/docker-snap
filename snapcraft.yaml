name: docker
version: 1.11.1-1
summary: Docker Linux container runtime
description: Docker complements kernel namespacing with a high-level API which operates at the process level. It runs unix processes with strong guarantees of isolation and repeatability across servers.

apps:
  docker:
    command: docker
    # TODO permissions

  dockerd:
    command: docker daemon
    daemon: simple
    # TODO permissions

parts:
  docker:
    plugin: shell
    source: https://github.com/docker/docker/archive/v1.11.1.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      for patch in "$SNAPDIR"/patches/*.patch; do
        patch -p1 -i "$patch"
      done
      
      export DOCKER_GITCOMMIT="$(
        git ls-remote --tags \
          https://github.com/docker/docker.git \
          "refs/tags/v$(cat VERSION)^{}" \
        | cut -b1-7
      )"
      
      export AUTO_GOPATH=1
      ./hack/make.sh dynbinary
      
      ls -l bundles/latest/*/
      
      dockerBin='bundles/latest/dynbinary/docker'
      "$dockerBin" -v
      "$dockerBin" -v | grep -q "$DOCKER_GITCOMMIT"
      
      install -d "$DESTDIR/bin"
      install -T "$(readlink -f "$dockerBin")" "$DESTDIR/bin/docker"
    build-packages:
      - btrfs-tools
      - gcc
      - golang-go
      - libc6-dev
      - libdevmapper-dev

  containerd:
    plugin: shell
    source: https://github.com/docker/containerd/archive/v0.2.1.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      make
      install -d "$DESTDIR/bin"
      install -T bin/containerd "$DESTDIR/bin/docker-containerd"
      install -T bin/containerd-shim "$DESTDIR/bin/docker-containerd-shim"
      install -T bin/ctr "$DESTDIR/bin/docker-containerd-ctr"
    build-packages:
      - golang-go
      - make

  runc:
    plugin: shell
    source: https://github.com/opencontainers/runc/archive/v0.1.1.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      make BUILDTAGS='seccomp apparmor selinux'
      install -d "$DESTDIR/bin"
      install -T runc "$DESTDIR/bin/docker-runc"
    build-packages:
      - golang-go
      - make

# vim:set et ts=2 sw=2:
